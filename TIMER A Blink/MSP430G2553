#include <msp430.h> 


/**
 * The main.c file for the Timer A Blink on the MSP430G2553 board
 *  Nolan Foy
 * Created on 9/24/18
 * Last updated on 9/28/18
 */
int main(void)
{
	WDTCTL = WDTPW | WDTHOLD;	// stop watchdog timer


	  P1DIR |= (BIT0|BIT6);            // Sets P1.0 and P1.6 to be output pins
	  P1OUT &= ~BIT0;                  // Set the red LED off
	  P1OUT &= ~BIT6;                  // Set the green LED off

	  TA0CCR0 = 10000;                 // Count limit (16 bit)
	  TA0CCTL0 = 0x10;                 // Enable Timer A0 interrupts, bit 4=1
	  TA0CTL = TASSEL_1 + MC_1;        // Timer A0 with ACLK, count UP

	  TA1CCR0 = 20000;                 // Count limit (16 bit)
	  TA1CCTL0 = 0x10;                 // Enable Timer A1 interrupts, bit 4=1
	  TA1CTL = TASSEL_1 + MC_1;        // Timer A1 with ACLK is selected, count UP is enabled

	  _BIS_SR(LPM0_bits + GIE);        // LPM0 (low power mode) interrupts enabled

	}

	#pragma vector=TIMER1_A0_VECTOR    // Timer1 A0 interrupt that is triggered when the value in the CCR0
                                       // register is met by the clock

	  __interrupt void Timer1_A0 (void) {

	   P1OUT ^= BIT0;                  // Toggles the red LED (P1.0) via Exclusive OR
	}

	#pragma vector=TIMER0_A0_VECTOR    // Timer0 A0 interrupt service routine

	  __interrupt void Timer0_A0 (void) {

	   P1OUT ^= BIT6;                  // Toggles the green LED (P1.6) via Exclusive OR
	}
